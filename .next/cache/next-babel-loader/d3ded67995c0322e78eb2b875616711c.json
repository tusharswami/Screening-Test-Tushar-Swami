{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport '../static/scss/filter.scss'; //filters data model\n\nvar FILTERS = [{\n  id: 'launch_year',\n  name: 'Launch Year',\n  options: [{\n    title: '2006',\n    value: '2006'\n  }, {\n    title: '2007',\n    value: '2007'\n  }, {\n    title: '2008',\n    value: '2008'\n  }, {\n    title: '2009',\n    value: '2009'\n  }, {\n    title: '2010',\n    value: '2010'\n  }, {\n    title: '2011',\n    value: '2011'\n  }, {\n    title: '2012',\n    value: '2012'\n  }, {\n    title: '2013',\n    value: '2013'\n  }, {\n    title: '2014',\n    value: '2014'\n  }, {\n    title: '2015',\n    value: '2015'\n  }, {\n    title: '2016',\n    value: '2016'\n  }, {\n    title: '2017',\n    value: '2017'\n  }, {\n    title: '2018',\n    value: '2018'\n  }, {\n    title: '2019',\n    value: '2019'\n  }, {\n    title: '2020',\n    value: '2020'\n  }]\n}, {\n  id: 'launch_success',\n  name: 'Successful Launch',\n  options: [{\n    title: 'True',\n    value: 'true'\n  }, {\n    title: 'False',\n    value: 'false'\n  }]\n}, {\n  id: 'land_success',\n  name: 'Successful Landing',\n  options: [{\n    title: 'True',\n    value: 'true'\n  }, {\n    title: 'False',\n    value: 'false'\n  }]\n}]; // no-op  function\n\nvar noop = function noop() {}; // view for filters\n\n\nvar Filters = function Filters(props) {\n  // use the received filters to show selected filters\n  var selectedFilters = props.filters;\n  return __jsx(\"div\", {\n    className: \"filters_container\"\n  }, __jsx(\"h2\", null, \"Filters\"), __jsx(\"span\", {\n    className: \"filters_container__action\",\n    onClick: function onClick() {\n      props.onClick({});\n    }\n  }, \"Clear\"), FILTERS.map(function (filter, index) {\n    return __jsx(\"div\", {\n      className: \"filters_container__filter\",\n      key: \"\".concat(filter.name, \"__\").concat(index)\n    }, __jsx(\"div\", {\n      className: \"filters_container__filter__title\"\n    }, filter.name), __jsx(\"div\", {\n      className: \"filters_container__filter__list\"\n    }, filter.options.map(function (option, index) {\n      var _selectedValue = selectedFilters[filter.id] ? selectedFilters[filter.id] : null;\n\n      var _className = _selectedValue !== option.value ? 'filters_container__filter__list__item' : 'filters_container__filter__list__item filters_container__filter__list__item--selected';\n\n      return __jsx(\"button\", {\n        key: \"\".concat(filter.name, \"__\").concat(index),\n        className: _className,\n        onClick: function onClick() {\n          _selectedValue !== option.value ? props.onClick(_objectSpread(_objectSpread({}, props.filters), {}, _defineProperty({}, filter.id, option.value))) : noop();\n        }\n      }, option.title);\n    })));\n  }));\n};\n\nexport default Filters;","map":null,"metadata":{},"sourceType":"module"}