{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"F:\\\\Publicis\\\\v1\\\\frontend\\\\components\\\\Cards.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport queryString from 'query-string';\nimport axios from 'axios';\nimport css from '../static/scss/card.scss';\n\nvar Cards = /*#__PURE__*/function (_React$Component) {\n  _inherits(Cards, _React$Component);\n\n  var _super = _createSuper(Cards);\n\n  function Cards(props) {\n    var _this;\n\n    _classCallCheck(this, Cards);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      filters: props.filters,\n      // filters object\n      response: {},\n      // response for cards data\n      isFetching: false // flag for fetching data\n\n    };\n\n    _this._bind();\n\n    return _this;\n  } // bind the methods to context\n\n\n  _createClass(Cards, [{\n    key: \"_bind\",\n    value: function _bind() {\n      this.getData = this.getData.bind(this);\n    } // fetch data on mount\n\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var filters = this.state.filters;\n\n      var _params = 0 !== Object.keys(filters).length ? \"?\".concat(queryString.stringify(filters)) : null;\n\n      this.getData(_params, filters).then(function (res) {\n        _this2.setState({\n          response: res,\n          isFetching: false\n        });\n      })[\"catch\"](function (e) {\n        return console.error(e);\n      });\n      ;\n    } // check if new filter changed\n\n  }, {\n    key: \"componentDidUpdate\",\n    // check if new data needs to be fetched in case filters have changed\n    value: function componentDidUpdate(prevProps, prevState) {\n      var _this3 = this;\n\n      if (JSON.stringify(this.state.filters) !== JSON.stringify(prevState.filters)) {\n        var _params = 0 !== Object.keys(this.state.filters).length ? \"?\".concat(queryString.stringify(this.state.filters)) : null;\n\n        this.getData(_params, this.state.filters).then(function (res) {\n          _this3.setState({\n            response: res,\n            isFetching: false\n          });\n        })[\"catch\"](function (e) {\n          return console.error(e);\n        });\n      }\n    } // make an API request and set the state with the recieved response\n\n  }, {\n    key: \"getData\",\n    value: function () {\n      var _getData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_params, filters) {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.setState({\n                  isFetching: true\n                });\n                _context.prev = 1;\n                _context.next = 4;\n                return axios.get(\"https://api.spacexdata.com/v3/launches?limit=100\".concat(_params));\n\n              case 4:\n                res = _context.sent;\n                _context.next = 10;\n                break;\n\n              case 7:\n                _context.prev = 7;\n                _context.t0 = _context[\"catch\"](1);\n                console.error(_context.t0);\n\n              case 10:\n                _context.prev = 10;\n\n                if (null !== _params) {\n                  window.history.replaceState(filters, 'params', \"\".concat(_params));\n                }\n\n                ;\n                return _context.finish(10);\n\n              case 14:\n                return _context.abrupt(\"return\", res);\n\n              case 15:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[1, 7, 10, 14]]);\n      }));\n\n      function getData(_x, _x2) {\n        return _getData.apply(this, arguments);\n      }\n\n      return getData;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      var _this$state = this.state,\n          isFetching = _this$state.isFetching,\n          response = _this$state.response; // if response has data then render cards\n\n      if (undefined !== response && 0 !== Object.keys(response).length && !isFetching) {\n        return __jsx(\"div\", {\n          className: css.cards__container,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 17\n          }\n        }, response.data && 0 < response.data.length ? response.data.map(function (item, index) {\n          return __jsx(\"div\", {\n            className: css.cards__container__card,\n            key: \"\".concat(item.mission_name, \"_\").concat(index),\n            __self: _this4,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 25\n            }\n          }, __jsx(\"img\", {\n            className: css.cards__container__card__icon,\n            alt: \"Mission Logo\",\n            src: item.links.mission_patch,\n            width: \"80%\",\n            height: \"60%\",\n            __self: _this4,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 29\n            }\n          }), __jsx(\"div\", {\n            className: css.cards__container__card__info,\n            __self: _this4,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 29\n            }\n          }, __jsx(\"div\", {\n            className: css.cards__container__card__info__title,\n            __self: _this4,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 29\n            }\n          }, \"\".concat(item.mission_name, \" # \").concat(item.flight_number)), __jsx(\"div\", {\n            className: css.cards__container__card__info__item,\n            __self: _this4,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 29\n            }\n          }, __jsx(\"span\", {\n            className: css.cards__container__card__info__item__key,\n            __self: _this4,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 33\n            }\n          }, \"Mission Ids :\"), __jsx(\"ul\", {\n            className: css.cards__container__card__info__item__list,\n            __self: _this4,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 33\n            }\n          }, item.mission_id.map(function (mission) {\n            return __jsx(\"li\", {\n              className: css.cards__container__card__info__item__value,\n              key: mission,\n              __self: _this4,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 41\n              }\n            }, \" \", mission);\n          }))), __jsx(\"div\", {\n            className: css.cards__container__card__info__item,\n            __self: _this4,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 29\n            }\n          }, __jsx(\"span\", {\n            className: \"cards__container__card__info__item__key\",\n            __self: _this4,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 33\n            }\n          }, \"Launch Year :\"), __jsx(\"span\", {\n            className: \"cards__container__card__info__item__value\",\n            __self: _this4,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 33\n            }\n          }, item.launch_year)), __jsx(\"div\", {\n            className: css.cards__container__card__info__item,\n            __self: _this4,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 29\n            }\n          }, __jsx(\"span\", {\n            className: \"cards__container__card__info__item__key\",\n            __self: _this4,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 33\n            }\n          }, \"Successful Launch :\"), __jsx(\"span\", {\n            className: \"cards__container__card__info__item__value\",\n            __self: _this4,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 33\n            }\n          }, null === item.launch_success ? 'null' : item.launch_success.toString())), __jsx(\"div\", {\n            className: css.cards__container__card__info__item,\n            __self: _this4,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 29\n            }\n          }, __jsx(\"span\", {\n            className: \"cards__container__card__info__item__key\",\n            __self: _this4,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 29\n            }\n          }, \"Successful Landing :\"), __jsx(\"span\", {\n            className: \"cards__container__card__info__item__value\",\n            __self: _this4,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 33\n            }\n          }, null === item.rocket.first_stage.cores[0].land_success ? 'null' : item.rocket.first_stage.cores[0].land_success.toString()))));\n        }) : __jsx(\"div\", {\n          className: \"no-data\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 26\n          }\n        }, \"No Data Found\"));\n      } else if (isFetching) {\n        // if the component is fetching data show preloaders\n        return __jsx(\"div\", {\n          className: \"cards__container\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 17\n          }\n        }, [1, 2, 3, 4].map(function (val, index) {\n          return __jsx(\"div\", {\n            className: \"cards__container__card__preloader\",\n            key: index,\n            __self: _this4,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 29\n            }\n          }, __jsx(\"div\", {\n            className: \"cards__container__card__icon__preloader\",\n            __self: _this4,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 25\n            }\n          }), __jsx(\"div\", {\n            className: \"cards__container__card__info__preloader\",\n            __self: _this4,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 25\n            }\n          }), __jsx(\"div\", {\n            className: \"cards__container__card__info__preloader\",\n            __self: _this4,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 25\n            }\n          }), __jsx(\"div\", {\n            className: \"cards__container__card__info__preloader\",\n            __self: _this4,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 25\n            }\n          }));\n        }));\n      } else return null;\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (JSON.stringify(prevState.filters) !== JSON.stringify(nextProps.filters)) {\n        return _objectSpread(_objectSpread({}, prevState), {}, {\n          filters: nextProps.filters\n        });\n      } else return null;\n    }\n  }]);\n\n  return Cards;\n}(React.Component);\n\nexport default Cards;","map":{"version":3,"sources":["F:/Publicis/v1/frontend/components/Cards.js"],"names":["queryString","axios","css","Cards","props","state","filters","response","isFetching","_bind","getData","bind","_params","Object","keys","length","stringify","then","res","setState","e","console","error","prevProps","prevState","JSON","get","window","history","replaceState","undefined","cards__container","data","map","item","index","cards__container__card","mission_name","cards__container__card__icon","links","mission_patch","cards__container__card__info","cards__container__card__info__title","flight_number","cards__container__card__info__item","cards__container__card__info__item__key","cards__container__card__info__item__list","mission_id","mission","cards__container__card__info__item__value","launch_year","launch_success","toString","rocket","first_stage","cores","land_success","val","nextProps","React","Component"],"mappings":"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","sourcesContent":["\r\nimport queryString from 'query-string';\r\nimport axios from 'axios';\r\nimport css from '../static/scss/card.scss'\r\n\r\nclass Cards extends React.Component{\r\n\r\n    constructor(props) {\r\n      super(props);\r\n  \r\n      this.state = {\r\n        filters: props.filters, // filters object\r\n        response: {}, // response for cards data\r\n        isFetching: false // flag for fetching data\r\n      };\r\n  \r\n      this._bind();\r\n    }\r\n\r\n    // bind the methods to context\r\n    _bind() {\r\n        this.getData = this.getData.bind(this);\r\n    }\r\n\r\n    // fetch data on mount\r\n    componentDidMount() {\r\n        const filters = this.state.filters;\r\n        const _params = 0 !== Object.keys( filters ).length ? `?${ queryString.stringify(filters) }`: null;\r\n\r\n        this.getData(_params,filters).then(\r\n            ( res ) => { this.setState( { response: res, isFetching: false } ); }\r\n        ).catch( e => console.error(e) );;\r\n    }\r\n\r\n    // check if new filter changed\r\n    static getDerivedStateFromProps( nextProps, prevState ) {\r\n        if( JSON.stringify( prevState.filters ) !== JSON.stringify( nextProps.filters ) ){\r\n            return { ...prevState, filters: nextProps.filters };\r\n        } else return null;\r\n    }\r\n\r\n    // check if new data needs to be fetched in case filters have changed\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if( JSON.stringify( this.state.filters ) !== JSON.stringify( prevState.filters ) ){\r\n            const _params = 0 !== Object.keys( this.state.filters ).length ? `?${ queryString.stringify(this.state.filters) }`: null;\r\n            this.getData(_params,this.state.filters).then(\r\n                ( res ) => { this.setState( { response: res, isFetching: false } ); }\r\n            ).catch( e => console.error(e) );\r\n        }\r\n    }\r\n\r\n    // make an API request and set the state with the recieved response\r\n    async getData(_params,filters) {\r\n\r\n        this.setState( { isFetching:true } );\r\n        let res;\r\n\r\n        try {\r\n            res = await axios.get(`https://api.spacexdata.com/v3/launches?limit=100${_params}`);\r\n        } catch (e) {\r\n            console.error(e);\r\n        } finally {\r\n            if( null !== _params ) {\r\n                window.history.replaceState( filters, 'params', `${_params}`);\r\n            };\r\n\r\n        }\r\n        return res;\r\n    }\r\n  \r\n\r\n    render() {\r\n\r\n        const { isFetching, response } = this.state;\r\n\r\n        // if response has data then render cards\r\n        if( undefined !== response && 0 !== Object.keys( response ).length && !isFetching ) {\r\n            return (\r\n                <div className={css.cards__container}>\r\n                    {\r\n                    response.data && 0 < response.data.length ? response.data.map( ( item, index ) => {\r\n                    \r\n                        return(\r\n                        <div className={css.cards__container__card} key={`${item.mission_name}_${index}`}>\r\n                            <img className={css.cards__container__card__icon} alt='Mission Logo' src={item.links.mission_patch} width='80%' height='60%'/>\r\n                            <div className={css.cards__container__card__info}>\r\n                            <div className={css.cards__container__card__info__title}>{`${item.mission_name} # ${item.flight_number}`}</div>\r\n                            <div className={css.cards__container__card__info__item}>\r\n                                <span className={css.cards__container__card__info__item__key}>\r\n                                Mission Ids : \r\n                                </span>\r\n                                <ul className={css.cards__container__card__info__item__list}>\r\n                                {\r\n                                    item.mission_id.map( ( mission ) => {\r\n                                    return(\r\n                                        <li className={css.cards__container__card__info__item__value} key={mission}> {mission}</li>\r\n                                    );\r\n                                    } )\r\n                                }\r\n                                </ul>\r\n                            </div>\r\n                            <div className={css.cards__container__card__info__item}>\r\n                                <span className='cards__container__card__info__item__key'>\r\n                                Launch Year : \r\n                                </span>\r\n                                <span className='cards__container__card__info__item__value'>\r\n                                {item.launch_year}\r\n                                </span>\r\n                            </div>\r\n                            <div className={css.cards__container__card__info__item}>\r\n                                <span className='cards__container__card__info__item__key'>\r\n                                Successful Launch : \r\n                                </span>\r\n                                <span className='cards__container__card__info__item__value'>\r\n                                { null === item.launch_success ? 'null':item.launch_success.toString() }\r\n                                </span>\r\n                            </div>\r\n                            <div className={css.cards__container__card__info__item}>\r\n                            <span className='cards__container__card__info__item__key'>\r\n                                Successful Landing :\r\n                                </span>\r\n                                <span className='cards__container__card__info__item__value'>\r\n                                { null === item.rocket.first_stage.cores[0].land_success ? 'null':item.rocket.first_stage.cores[0].land_success.toString() }\r\n                                </span>\r\n                            </div>\r\n                            </div>\r\n                        </div>\r\n                        );\r\n                    }) : <div className='no-data'>No Data Found</div>\r\n                    }\r\n                </div>\r\n            );\r\n        } else if( isFetching ) { // if the component is fetching data show preloaders\r\n            return(\r\n                <div className='cards__container'>\r\n                {\r\n                    [1,2,3,4].map( (val,index) => {\r\n                    return( <div className='cards__container__card__preloader' key={index}>\r\n                        <div className='cards__container__card__icon__preloader'></div>\r\n                        <div className='cards__container__card__info__preloader'></div>\r\n                        <div className='cards__container__card__info__preloader'></div>\r\n                        <div className='cards__container__card__info__preloader'></div>\r\n                    </div> );\r\n                    } )\r\n                }\r\n                </div>\r\n            );\r\n        } else return null;\r\n    }\r\n}\r\n\r\nexport default Cards;"]},"metadata":{},"sourceType":"module"}