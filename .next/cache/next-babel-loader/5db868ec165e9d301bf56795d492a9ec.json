{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport Cards from './Cards';\nimport Filters from './Filters';\nimport '../static/scss/index.scss';\nimport { useState, useEffect } from 'react';\n\nconst Landing = () => {\n  const {\n    0: values,\n    1: setValues\n  } = useState({\n    filters: {}\n  });\n  const {\n    filters\n  } = values;\n\n  const onClick = payload => {\n    setValues(_objectSpread(_objectSpread({}, values), {}, {\n      filters: payload\n    }));\n  };\n\n  return __jsx(React.Fragment, null, __jsx(Filters, {\n    onClick: onClick,\n    filters: filters\n  }), __jsx(Cards, {\n    filters: filters\n  }));\n};\n\nexport default Landing;","map":null,"metadata":{},"sourceType":"module"}