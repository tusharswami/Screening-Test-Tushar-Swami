{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Fragment } from 'react';\nimport Cards from './Cards';\nimport Filters from './Filters';\nimport '../static/scss/App.scss';\n\nvar Landing = /*#__PURE__*/function (_React$Component) {\n  _inherits(Landing, _React$Component);\n\n  var _super = _createSuper(Landing);\n\n  function Landing(props) {\n    var _this;\n\n    _classCallCheck(this, Landing);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      filters: {} // filters object\n\n    };\n\n    _this._bind();\n\n    return _this;\n  } // bind methods to the context\n\n\n  _createClass(Landing, [{\n    key: \"_bind\",\n    value: function _bind() {\n      this.onClick = this.onClick.bind(this);\n    } // method called on click of the filters and sets the new filters in state\n\n  }, {\n    key: \"onClick\",\n    value: function onClick(payload) {\n      this.setState({\n        filters: payload\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var filters = this.state.filters;\n      return __jsx(Fragment, null, __jsx(Filters, {\n        onClick: this.onClick,\n        filters: filters\n      }), __jsx(Cards, {\n        filters: filters\n      }));\n    }\n  }]);\n\n  return Landing;\n}(React.Component);\n\nexport default Landing;","map":null,"metadata":{},"sourceType":"module"}