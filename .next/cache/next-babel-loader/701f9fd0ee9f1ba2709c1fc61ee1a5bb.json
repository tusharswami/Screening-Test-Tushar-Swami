{"ast":null,"code":"var _jsxFileName = \"F:\\\\Publicis\\\\v1\\\\frontend\\\\components\\\\Cards.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport queryString from 'query-string';\nimport axios from 'axios';\nimport css from '../static/scss/card.scss';\n\nclass Cards extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      filters: props.filters,\n      // filters object\n      response: {},\n      // response for cards data\n      isFetching: false // flag for fetching data\n\n    };\n\n    this._bind();\n  } // bind the methods to context\n\n\n  _bind() {\n    this.getData = this.getData.bind(this);\n  } // fetch data on mount\n\n\n  componentDidMount() {\n    const filters = this.state.filters;\n\n    const _params = 0 !== Object.keys(filters).length ? `?${queryString.stringify(filters)}` : null;\n\n    this.getData(_params, filters).then(res => {\n      this.setState({\n        response: res,\n        isFetching: false\n      });\n    }).catch(e => console.error(e));\n    ;\n  } // check if new filter changed\n\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    if (JSON.stringify(prevState.filters) !== JSON.stringify(nextProps.filters)) {\n      return _objectSpread(_objectSpread({}, prevState), {}, {\n        filters: nextProps.filters\n      });\n    } else return null;\n  } // check if new data needs to be fetched in case filters have changed\n\n\n  componentDidUpdate(prevProps, prevState) {\n    if (JSON.stringify(this.state.filters) !== JSON.stringify(prevState.filters)) {\n      const _params = 0 !== Object.keys(this.state.filters).length ? `?${queryString.stringify(this.state.filters)}` : null;\n\n      this.getData(_params, this.state.filters).then(res => {\n        this.setState({\n          response: res,\n          isFetching: false\n        });\n      }).catch(e => console.error(e));\n    }\n  } // make an API request and set the state with the recieved response\n\n\n  async getData(_params, filters) {\n    this.setState({\n      isFetching: true\n    });\n    let res;\n\n    try {\n      res = await axios.get(`https://api.spacexdata.com/v3/launches?limit=100${_params}`);\n    } catch (e) {\n      console.error(e);\n    } finally {\n      if (null !== _params) {\n        window.history.replaceState(filters, 'params', `${_params}`);\n      }\n\n      ;\n    }\n\n    return res;\n  }\n\n  render() {\n    const {\n      isFetching,\n      response\n    } = this.state; // if response has data then render cards\n\n    if (undefined !== response && 0 !== Object.keys(response).length && !isFetching) {\n      return __jsx(\"div\", {\n        className: css.cards__container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 17\n        }\n      }, response.data && 0 < response.data.length ? response.data.map((item, index) => {\n        return __jsx(\"div\", {\n          className: css.cards__container__card,\n          key: `${item.mission_name}_${index}`,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 25\n          }\n        }, __jsx(\"img\", {\n          className: css.cards__container__card__icon,\n          alt: \"Mission Logo\",\n          src: item.links.mission_patch,\n          width: \"80%\",\n          height: \"60%\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 29\n          }\n        }), __jsx(\"div\", {\n          className: css.cards__container__card__info,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 29\n          }\n        }, __jsx(\"div\", {\n          className: css.cards__container__card__info__title,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 29\n          }\n        }, `${item.mission_name} # ${item.flight_number}`), __jsx(\"div\", {\n          className: css.cards__container__card__info__item,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 29\n          }\n        }, __jsx(\"span\", {\n          className: css.cards__container__card__info__item__key,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 33\n          }\n        }, \"Mission Ids :\"), __jsx(\"ul\", {\n          className: css.cards__container__card__info__item__list,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 33\n          }\n        }, item.mission_id.map(mission => {\n          return __jsx(\"li\", {\n            className: css.cards__container__card__info__item__value,\n            key: mission,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 41\n            }\n          }, \" \", mission);\n        }))), __jsx(\"div\", {\n          className: css.cards__container__card__info__item,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 29\n          }\n        }, __jsx(\"span\", {\n          className: \"cards__container__card__info__item__key\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 33\n          }\n        }, \"Launch Year :\"), __jsx(\"span\", {\n          className: \"cards__container__card__info__item__value\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 33\n          }\n        }, item.launch_year)), __jsx(\"div\", {\n          className: css.cards__container__card__info__item,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 29\n          }\n        }, __jsx(\"span\", {\n          className: \"cards__container__card__info__item__key\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 33\n          }\n        }, \"Successful Launch :\"), __jsx(\"span\", {\n          className: \"cards__container__card__info__item__value\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 33\n          }\n        }, null === item.launch_success ? 'null' : item.launch_success.toString())), __jsx(\"div\", {\n          className: css.cards__container__card__info__item,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 29\n          }\n        }, __jsx(\"span\", {\n          className: \"cards__container__card__info__item__key\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 29\n          }\n        }, \"Successful Landing :\"), __jsx(\"span\", {\n          className: \"cards__container__card__info__item__value\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 33\n          }\n        }, null === item.rocket.first_stage.cores[0].land_success ? 'null' : item.rocket.first_stage.cores[0].land_success.toString()))));\n      }) : __jsx(\"div\", {\n        className: \"no-data\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 26\n        }\n      }, \"No Data Found\"));\n    } else if (isFetching) {\n      // if the component is fetching data show preloaders\n      return __jsx(\"div\", {\n        className: \"cards__container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 17\n        }\n      }, [1, 2, 3, 4].map((val, index) => {\n        return __jsx(\"div\", {\n          className: \"cards__container__card__preloader\",\n          key: index,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 29\n          }\n        }, __jsx(\"div\", {\n          className: css.cards__container__card__icon__preloader,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 25\n          }\n        }), __jsx(\"div\", {\n          className: css.cards__container__card__info__preloader,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 25\n          }\n        }), __jsx(\"div\", {\n          className: css.cards__container__card__info__preloader,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 25\n          }\n        }), __jsx(\"div\", {\n          className: css.cards__container__card__info__preloader,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 25\n          }\n        }));\n      }));\n    } else return null;\n  }\n\n}\n\nexport default Cards;","map":{"version":3,"sources":["F:/Publicis/v1/frontend/components/Cards.js"],"names":["queryString","axios","css","Cards","React","Component","constructor","props","state","filters","response","isFetching","_bind","getData","bind","componentDidMount","_params","Object","keys","length","stringify","then","res","setState","catch","e","console","error","getDerivedStateFromProps","nextProps","prevState","JSON","componentDidUpdate","prevProps","get","window","history","replaceState","render","undefined","cards__container","data","map","item","index","cards__container__card","mission_name","cards__container__card__icon","links","mission_patch","cards__container__card__info","cards__container__card__info__title","flight_number","cards__container__card__info__item","cards__container__card__info__item__key","cards__container__card__info__item__list","mission_id","mission","cards__container__card__info__item__value","launch_year","launch_success","toString","rocket","first_stage","cores","land_success","val","cards__container__card__icon__preloader","cards__container__card__info__preloader"],"mappings":"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","sourcesContent":["\r\nimport queryString from 'query-string';\r\nimport axios from 'axios';\r\nimport css from '../static/scss/card.scss'\r\n\r\nclass Cards extends React.Component{\r\n\r\n    constructor(props) {\r\n      super(props);\r\n  \r\n      this.state = {\r\n        filters: props.filters, // filters object\r\n        response: {}, // response for cards data\r\n        isFetching: false // flag for fetching data\r\n      };\r\n  \r\n      this._bind();\r\n    }\r\n\r\n    // bind the methods to context\r\n    _bind() {\r\n        this.getData = this.getData.bind(this);\r\n    }\r\n\r\n    // fetch data on mount\r\n    componentDidMount() {\r\n        const filters = this.state.filters;\r\n        const _params = 0 !== Object.keys( filters ).length ? `?${ queryString.stringify(filters) }`: null;\r\n\r\n        this.getData(_params,filters).then(\r\n            ( res ) => { this.setState( { response: res, isFetching: false } ); }\r\n        ).catch( e => console.error(e) );;\r\n    }\r\n\r\n    // check if new filter changed\r\n    static getDerivedStateFromProps( nextProps, prevState ) {\r\n        if( JSON.stringify( prevState.filters ) !== JSON.stringify( nextProps.filters ) ){\r\n            return { ...prevState, filters: nextProps.filters };\r\n        } else return null;\r\n    }\r\n\r\n    // check if new data needs to be fetched in case filters have changed\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if( JSON.stringify( this.state.filters ) !== JSON.stringify( prevState.filters ) ){\r\n            const _params = 0 !== Object.keys( this.state.filters ).length ? `?${ queryString.stringify(this.state.filters) }`: null;\r\n            this.getData(_params,this.state.filters).then(\r\n                ( res ) => { this.setState( { response: res, isFetching: false } ); }\r\n            ).catch( e => console.error(e) );\r\n        }\r\n    }\r\n\r\n    // make an API request and set the state with the recieved response\r\n    async getData(_params,filters) {\r\n\r\n        this.setState( { isFetching:true } );\r\n        let res;\r\n\r\n        try {\r\n            res = await axios.get(`https://api.spacexdata.com/v3/launches?limit=100${_params}`);\r\n        } catch (e) {\r\n            console.error(e);\r\n        } finally {\r\n            if( null !== _params ) {\r\n                window.history.replaceState( filters, 'params', `${_params}`);\r\n            };\r\n\r\n        }\r\n        return res;\r\n    }\r\n  \r\n\r\n    render() {\r\n\r\n        const { isFetching, response } = this.state;\r\n\r\n        // if response has data then render cards\r\n        if( undefined !== response && 0 !== Object.keys( response ).length && !isFetching ) {\r\n            return (\r\n                <div className={css.cards__container}>\r\n                    {\r\n                    response.data && 0 < response.data.length ? response.data.map( ( item, index ) => {\r\n                    \r\n                        return(\r\n                        <div className={css.cards__container__card} key={`${item.mission_name}_${index}`}>\r\n                            <img className={css.cards__container__card__icon} alt='Mission Logo' src={item.links.mission_patch} width='80%' height='60%'/>\r\n                            <div className={css.cards__container__card__info}>\r\n                            <div className={css.cards__container__card__info__title}>{`${item.mission_name} # ${item.flight_number}`}</div>\r\n                            <div className={css.cards__container__card__info__item}>\r\n                                <span className={css.cards__container__card__info__item__key}>\r\n                                Mission Ids : \r\n                                </span>\r\n                                <ul className={css.cards__container__card__info__item__list}>\r\n                                {\r\n                                    item.mission_id.map( ( mission ) => {\r\n                                    return(\r\n                                        <li className={css.cards__container__card__info__item__value} key={mission}> {mission}</li>\r\n                                    );\r\n                                    } )\r\n                                }\r\n                                </ul>\r\n                            </div>\r\n                            <div className={css.cards__container__card__info__item}>\r\n                                <span className='cards__container__card__info__item__key'>\r\n                                Launch Year : \r\n                                </span>\r\n                                <span className='cards__container__card__info__item__value'>\r\n                                {item.launch_year}\r\n                                </span>\r\n                            </div>\r\n                            <div className={css.cards__container__card__info__item}>\r\n                                <span className='cards__container__card__info__item__key'>\r\n                                Successful Launch : \r\n                                </span>\r\n                                <span className='cards__container__card__info__item__value'>\r\n                                { null === item.launch_success ? 'null':item.launch_success.toString() }\r\n                                </span>\r\n                            </div>\r\n                            <div className={css.cards__container__card__info__item}>\r\n                            <span className='cards__container__card__info__item__key'>\r\n                                Successful Landing :\r\n                                </span>\r\n                                <span className='cards__container__card__info__item__value'>\r\n                                { null === item.rocket.first_stage.cores[0].land_success ? 'null':item.rocket.first_stage.cores[0].land_success.toString() }\r\n                                </span>\r\n                            </div>\r\n                            </div>\r\n                        </div>\r\n                        );\r\n                    }) : <div className='no-data'>No Data Found</div>\r\n                    }\r\n                </div>\r\n            );\r\n        } else if( isFetching ) { // if the component is fetching data show preloaders\r\n            return(\r\n                <div className='cards__container'>\r\n                {\r\n                    [1,2,3,4].map( (val,index) => {\r\n                    return( <div className='cards__container__card__preloader' key={index}>\r\n                        <div className={css.cards__container__card__icon__preloader}></div>\r\n                        <div className={css.cards__container__card__info__preloader}></div>\r\n                        <div className={css.cards__container__card__info__preloader}></div>\r\n                        <div className={css.cards__container__card__info__preloader}></div>\r\n                    </div> );\r\n                    } )\r\n                }\r\n                </div>\r\n            );\r\n        } else return null;\r\n    }\r\n}\r\n\r\nexport default Cards;"]},"metadata":{},"sourceType":"module"}